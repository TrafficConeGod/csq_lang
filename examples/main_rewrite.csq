module main;
import std.io into *;
import std.lib into *;
import std.array into *;
import std.string into *;
import std.file into file;
import util.file into file;
import backend.object into *;

int main(const size_t args_count, size_t[args_count]* args_sizes, char[i : arg_sizes[i]][args_count]* args) {
    // Create object files for each input file.
    for (size_t i = 1; i < args_count; ++i) {
        string source_file_path = { size = arg_sizes[i], data = args[i] };

        if (!file.exists(source_file_path)) {
            print("File not found: ", source_file_path, "\n");
            continue;
        }

        mutable_stack_string source = { size = file.get_size_of_file(source_file_path) };

        auto source_file = file.open(source_file_path, { data = "rb" });
        file.read(source_file, deref_array_ptr(&source));
        file.close(source_file);
    
        file.remove_parent_dirs(deref_array_ptr(&source_file_path));
        file.strip_file_extension(deref_array_ptr(&source_file_path));

        mutable_stack_string object_file_name = { size = source_file_path.size + 2, data = *source_file_path.data };
        object_file_name[source_file_path.size] = '.';
        object_file_name[source_file_path.size + 1] = 'o';

        make_object_file(deref_array(source), deref_array(object_file_name));
    }
    return 0;
}